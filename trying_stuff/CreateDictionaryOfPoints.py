# -*- coding: utf-8 -*-
"""
Created on Wed Jun  3 16:18:13 2020

@author: ctorti
"""

"""
Function:
    CreateDictionaryOfPoints()
    
Purpose:
    Create a dictionary containing points for ANTsPy to deform.
    
    The dictionary will have the format: 
        
    {'x': [point1_x, point2_x, point3_x, ...],
     'y': [point1_y, point2_y, point3_y, ...],
     'z': [point1_z, point2_z, point3_z, ...]
     }
    
    The contour points (ContourPts) will be obtained by running a function 
    called GetContourPoints3D(), that uses tags in the DICOMs (Dicoms) and the 
    DICOM-RTSTRUCT (ROI Collection generated by OHIF-Viewer) file to obtain the 
    contour points in image space.  Another function called GetDicoms() reads 
    in the DICOMs.
    
    FixedContourPts are in the form:
        
    [
     [],
     [],
     ...
     [
      [point1_x_contourN, point1_y_contourN, point1_z_contourN],
      [point2_x_contourN, point2_y_contourN, point2_z_contourN],
      ...
      [pointM_x_contourN, pointM_y_contourN, pointM_z_contourN]
      ], 
     [],
     ]
     
    where each array corresponds to a slice in Dicoms. 
    
    If any given array is empty, i.e. [], there is no contour for that slice.  
    If there is a contour, the points 
    
    [point1_x_contourN, point1_y_contourN, point1_z_contourN],
    [point2_x_contourN, point2_y_contourN, point2_z_contourN],
    ...
    [pointM_x_contourN, pointM_y_contourN, pointM_z_contourN]
      
    are the M points that make up a contour for the nth slice in Dicoms.


Input:
    DicomDir        - Directory containing DICOMs 
    
    RoiFpath        - Filepath of the DICOM-RTSTRUCT ROI Collection
    
    
    
Returns:
    PointsDict - A dictionary containing the points in ROI Collection in format
                 specified above
    
"""


def CreateDictionaryOfPoints(DicomDir, RoiFpath):
    # Import packages:
    #import pydicom
    #from GetDicoms import GetDicoms
    #from GetContourPoints3D import GetContourPoints3D
    from GetAllContourPoints3D import GetAllContourPoints3D
    
    
    # Get the DICOMs:
    #DicomFpaths, Dicoms = GetDicoms(DicomDir, 'slices', Debug=False)

    # Read in the ROI Collection:
    #Rois = pydicom.dcmread(RoiFpath)
    
    # Create an array of contour points:
    #ContourPts = []
    
    #for i in range(len(Dicoms)):
    #    ContourPts.append(GetContourPoints3D(Dicoms[i], Rois))
        
    # Get the contour points:
    ContourPts = GetAllContourPoints3D(DicomDir, RoiFpath)
    
    # Initialise an array to store the x, y and z coordinates:
    X = []
    Y = []
    Z = []  
    
    # Loop through each array of points in ContourPts and append the x, y and z
    # coordinates to X, Y and Z:
    for ArrayOfPts in ContourPts:
        if ArrayOfPts: # if there are points for this contour
            for Point in ArrayOfPts:
                X.append(Point[0])
                Y.append(Point[1])
                Z.append(Point[2])
    
    return {'x':X, 'y':Y, 'z':Z} 